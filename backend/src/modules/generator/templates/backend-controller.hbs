const {{dashToCamel modulePath}}Service = require('./{{modulePath}}.service');
const { success, paginated } = require('../../utils/response');

class {{moduleName}}Controller {
  /**
   * 获取{{description}}列表
   * GET /api/{{modulePath}}
   */
  async get{{moduleName}}s(req, res, next) {
    try {
      const result = await {{dashToCamel modulePath}}Service.get{{moduleName}}s(req.query);
      paginated(res, result.data, result.pagination, '获取{{description}}列表成功');
    } catch (error) {
      next(error);
    }
  }

  /**
   * 获取{{description}}详情
   * GET /api/{{modulePath}}/:id
   */
  async get{{moduleName}}ById(req, res, next) {
    try {
      const item = await {{dashToCamel modulePath}}Service.get{{moduleName}}ById(req.params.id);
      success(res, item, '获取{{description}}详情成功');
    } catch (error) {
      next(error);
    }
  }

  {{#if enableCreate}}
  /**
   * 创建{{description}}
   * POST /api/{{modulePath}}
   */
  async create{{moduleName}}(req, res, next) {
    try {
      const item = await {{dashToCamel modulePath}}Service.create{{moduleName}}(req.body);
      success(res, item, '创建{{description}}成功', 201);
    } catch (error) {
      next(error);
    }
  }
  {{/if}}

  {{#if enableUpdate}}
  /**
   * 更新{{description}}
   * PUT /api/{{modulePath}}/:id
   */
  async update{{moduleName}}(req, res, next) {
    try {
      const item = await {{dashToCamel modulePath}}Service.update{{moduleName}}(req.params.id, req.body);
      success(res, item, '更新{{description}}成功');
    } catch (error) {
      next(error);
    }
  }
  {{/if}}

  {{#if enableDelete}}
  /**
   * 删除{{description}}
   * DELETE /api/{{modulePath}}/:id
   */
  async delete{{moduleName}}(req, res, next) {
    try {
      const result = await {{dashToCamel modulePath}}Service.delete{{moduleName}}(req.params.id);
      success(res, result, '删除{{description}}成功');
    } catch (error) {
      next(error);
    }
  }
  {{/if}}

  {{#if enableBatchDelete}}
  /**
   * 批量删除{{description}}
   * DELETE /api/{{modulePath}}/batch
   */
  async batchDelete{{moduleName}}s(req, res, next) {
    try {
      const { ids } = req.body;
      const result = await {{dashToCamel modulePath}}Service.batchDelete{{moduleName}}s(ids);
      success(res, result, '批量删除{{description}}成功');
    } catch (error) {
      next(error);
    }
  }
  {{/if}}

  {{#if enableExport}}
  /**
   * 导出{{description}}数据
   * GET /api/{{modulePath}}/export
   */
  async export{{moduleName}}s(req, res, next) {
    try {
      const items = await {{dashToCamel modulePath}}Service.export{{moduleName}}s(req.query);
      success(res, items, '导出{{description}}数据成功');
    } catch (error) {
      next(error);
    }
  }
  {{/if}}
}

module.exports = new {{moduleName}}Controller();
