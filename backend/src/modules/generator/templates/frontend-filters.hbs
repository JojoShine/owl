'use client';

import { useState } from 'react';
import { Search, X } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from '@/components/ui/select';
import { Card } from '@/components/ui/card';

interface {{moduleName}}FiltersProps {
  onFilterChange: (filters: Record<string, any>) => void;
}

export function {{moduleName}}Filters({ onFilterChange }: {{moduleName}}FiltersProps) {
  const [filters, setFilters] = useState({
    {{#each searchFields}}
    {{#if (eq this.searchType 'range')}}
    {{this.name}}_start: '',
    {{this.name}}_end: '',
    {{else}}
    {{this.name}}: '',
    {{/if}}
    {{/each}}
  });

  const handleFilterChange = (key: string, value: any) => {
    setFilters(prev => ({
      ...prev,
      [key]: value,
    }));
  };

  const handleSearch = () => {
    // 过滤掉空值
    const activeFilters = Object.entries(filters).reduce((acc, [key, value]) => {
      if (value !== '' && value !== null && value !== undefined) {
        acc[key] = value;
      }
      return acc;
    }, {} as Record<string, any>);

    onFilterChange(activeFilters);
  };

  const handleReset = () => {
    const resetFilters = {
      {{#each searchFields}}
      {{#if (eq this.searchType 'range')}}
      {{this.name}}_start: '',
      {{this.name}}_end: '',
      {{else}}
      {{this.name}}: '',
      {{/if}}
      {{/each}}
    };
    setFilters(resetFilters);
    onFilterChange({});
  };

  return (
    <Card className="p-4">
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
        {{#each searchFields}}
        {{#if (eq this.searchType 'range')}}
        {/* {{this.comment}}范围搜索 */}
        <div className="space-y-2">
          <label className="text-sm font-medium">{{this.comment}}（起始）</label>
          {{#if (eq this.searchComponent 'date')}}
          <Input
            type="date"
            value={filters['{{this.name}}_start']}
            onChange={(e) => handleFilterChange('{{this.name}}_start', e.target.value)}
          />
          {{else if (eq this.searchComponent 'datetime')}}
          <Input
            type="datetime-local"
            value={filters['{{this.name}}_start']}
            onChange={(e) => handleFilterChange('{{this.name}}_start', e.target.value)}
          />
          {{else if (eq this.searchComponent 'number')}}
          <Input
            type="number"
            placeholder="最小值"
            value={filters['{{this.name}}_start']}
            onChange={(e) => handleFilterChange('{{this.name}}_start', e.target.value)}
          />
          {{else}}
          <Input
            placeholder="起始值"
            value={filters['{{this.name}}_start']}
            onChange={(e) => handleFilterChange('{{this.name}}_start', e.target.value)}
          />
          {{/if}}
        </div>
        <div className="space-y-2">
          <label className="text-sm font-medium">{{this.comment}}（结束）</label>
          {{#if (eq this.searchComponent 'date')}}
          <Input
            type="date"
            value={filters['{{this.name}}_end']}
            onChange={(e) => handleFilterChange('{{this.name}}_end', e.target.value)}
          />
          {{else if (eq this.searchComponent 'datetime')}}
          <Input
            type="datetime-local"
            value={filters['{{this.name}}_end']}
            onChange={(e) => handleFilterChange('{{this.name}}_end', e.target.value)}
          />
          {{else if (eq this.searchComponent 'number')}}
          <Input
            type="number"
            placeholder="最大值"
            value={filters['{{this.name}}_end']}
            onChange={(e) => handleFilterChange('{{this.name}}_end', e.target.value)}
          />
          {{else}}
          <Input
            placeholder="结束值"
            value={filters['{{this.name}}_end']}
            onChange={(e) => handleFilterChange('{{this.name}}_end', e.target.value)}
          />
          {{/if}}
        </div>
        {{else}}
        {/* {{this.comment}}搜索 */}
        <div className="space-y-2">
          <label className="text-sm font-medium">{{this.comment}}</label>
          {{#if (eq this.searchComponent 'input')}}
          <Input
            placeholder="请输入{{this.comment}}"
            value={filters['{{this.name}}']}
            onChange={(e) => handleFilterChange('{{this.name}}', e.target.value)}
          />
          {{else if (eq this.searchComponent 'select')}}
          <Select
            value={filters['{{this.name}}']}
            onValueChange={(value) => handleFilterChange('{{this.name}}', value)}
          >
            <SelectTrigger>
              <SelectValue placeholder="请选择{{this.comment}}" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="">全部</SelectItem>
              {{#each this.options}}
              <SelectItem value="{{this.value}}">{{this.label}}</SelectItem>
              {{/each}}
            </SelectContent>
          </Select>
          {{else if (eq this.searchComponent 'date')}}
          <Input
            type="date"
            value={filters['{{this.name}}']}
            onChange={(e) => handleFilterChange('{{this.name}}', e.target.value)}
          />
          {{else if (eq this.searchComponent 'datetime')}}
          <Input
            type="datetime-local"
            value={filters['{{this.name}}']}
            onChange={(e) => handleFilterChange('{{this.name}}', e.target.value)}
          />
          {{else if (eq this.searchComponent 'number')}}
          <Input
            type="number"
            placeholder="请输入{{this.comment}}"
            value={filters['{{this.name}}']}
            onChange={(e) => handleFilterChange('{{this.name}}', e.target.value)}
          />
          {{else}}
          <Input
            placeholder="请输入{{this.comment}}"
            value={filters['{{this.name}}']}
            onChange={(e) => handleFilterChange('{{this.name}}', e.target.value)}
          />
          {{/if}}
        </div>
        {{/if}}
        {{/each}}
      </div>
      <div className="flex gap-2 mt-4">
        <Button onClick={handleSearch}>
          <Search className="mr-2 h-4 w-4" />
          搜索
        </Button>
        <Button variant="outline" onClick={handleReset}>
          <X className="mr-2 h-4 w-4" />
          重置
        </Button>
      </div>
    </Card>
  );
}
